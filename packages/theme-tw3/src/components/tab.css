.tabs {
  &[data-orientation="horizontal"] {
    display: block;
  }

  &[data-orientation="vertical"] {
    display: flex;
  }

  &[data-disabled] {
    pointer-events: none;
  }
}

.tab-list {
  @apply inline-flex h-fit flex-nowrap items-center overflow-x-scroll;
  scrollbar-width: none;
}

.tab {
  @apply text-base-content/50 relative flex cursor-pointer items-center justify-center select-none;
  --indicator-color: theme(colors.base-100);
  --indicator-width: 80%;
  --indicator-height: 2px;
  --tab-p: 1rem;
  --tab-selected-color: theme(colors.base-content);
  height: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  padding-inline-start: var(--tab-p);
  padding-inline-end: var(--tab-p);

  &[data-focus-visible] {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }

  &[data-disabled] {
    @apply cursor-not-allowed opacity-40;
  }

  &[data-selected] {
    color: var(--tab-selected-color);
  }
}

.tab-content {
  @apply relative z-10;
}

.tab-indicator {
  @apply absolute z-0;
}

.tab-panel {
  @apply px-1 py-3 outline-none;

  &[data-focus-visible] {
    outline: 2px solid currentColor;
    outline-offset: 2px;
  }
}

.tab-list-box {
  @apply bg-base-200 rounded-lg p-1;

  .tab {
    @apply rounded-field;
  }

  .tab-indicator {
    @apply rounded-field inset-0;
    background-color: var(--indicator-color);
    box-shadow:
      0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset,
      0 1px 1px -1px color-mix(in oklab, theme(colors.neutral) calc(var(--depth) * 50%), #0000),
      0 1px 6px -4px color-mix(in oklab, theme(colors.neutral) calc(var(--depth) * 100%), #0000);
  }
}

.tab-list-border {
  .tab-indicator {
    @apply bottom-0;
    --indicator-color: currentColor;
    background-color: var(--indicator-color);
    width: var(--indicator-width);
    height: var(--indicator-height);
  }
}

.tab-list-xs {
  :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 6);
    font-size: 0.75rem;
    --tab-p: 0.375rem;
  }
}

.tab-list-sm {
  :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 8);
    font-size: 0.875rem;
    --tab-p: 0.5rem;
  }
}

.tab-list-md {
  :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 10);
    font-size: 0.875rem;
    --tab-p: 0.75rem;
  }
}

.tab-list-lg {
  :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 12);
    font-size: 1.125rem;
    --tab-p: 1rem;
  }
}

.tab-list-xl {
  :where(.tab) {
    height: calc(var(--size-field, 0.25rem) * 14);
    font-size: 1.125rem;
    --tab-p: 1.25rem;
  }
}

.tab-list-primary {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.primary);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.primary-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.primary);
    }
  }
}

.tab-list-secondary {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.secondary);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.secondary-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.secondary);
    }
  }
}

.tab-list-accent {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.accent);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.accent-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.accent);
    }
  }
}

.tab-list-info {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.info);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.info-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.info);
    }
  }
}

.tab-list-success {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.success);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.success-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.success);
    }
  }
}

.tab-list-warning {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.warning);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.warning-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.warning);
    }
  }
}

.tab-list-error {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.error);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.error-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.error);
    }
  }
}

.tab-list-neutral {
  :where(.tab-indicator) {
    --indicator-color: theme(colors.neutral);
  }
  &.tab-list-box {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.neutral-content);
    }
  }
  &.tab-list-border {
    .tab[data-selected] {
      --tab-selected-color: theme(colors.neutral);
    }
  }
}
