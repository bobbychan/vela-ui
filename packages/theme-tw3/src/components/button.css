:where(.btn) {
  width: unset;
}
.btn {
  @apply inline-flex shrink-0 flex-nowrap items-center justify-center gap-1.5 text-center align-middle outline-0 outline-offset-2 select-none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  --tw-prose-links: var(--btn-fg);
  height: var(--size);
  font-size: var(--fontsize, 0.875rem);
  font-weight: 600;
  outline-color: var(--btn-color, theme(colors.base-content));
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  touch-action: manipulation;
  box-shadow:
    0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset,
    var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, theme(colors.base-200));
  --btn-fg: theme(colors.base-content);
  --btn-p: 1rem;
  --btn-border: var(--btn-bg);
  @supports (color: color-mix(in oklab, black, black)) {
    --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  }
  --btn-shadow:
    0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
  .prose & {
    @apply no-underline;
  }
  @media (hover: hover) {
    &:hover {
      --btn-bg: var(--btn-color, theme(colors.base-200));
      @supports (color: color-mix(in oklab, black, black)) {
        --btn-bg: color-mix(in oklab, var(--btn-color, theme(colors.base-200)), #000 7%);
      }
    }
  }

  &[data-focus-visible] {
    outline-width: 2px;
    outline-style: solid;
    isolation: isolate;
  }

  &:active {
    translate: 0 0.5px;
    --btn-bg: var(--btn-color, theme(colors.base-200));
    --btn-border: var(--btn-color, theme(colors.base-200));
    @supports (color: color-mix(in oklab, black, black)) {
      --btn-bg: color-mix(in oklab, var(--btn-color, theme(colors.base-200)), #000 5%);
      --btn-border: color-mix(in oklab, var(--btn-color, theme(colors.base-200)), #000 7%);
    }
    --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  }

  &:is(:disabled, [disabled], .btn-disabled) {
    &:not(.btn-link, .btn-ghost) {
      @apply bg-base-content/10;
      @supports not (color: oklch(0% 0 0)) {
        @apply bg-base-200;
      }
      box-shadow: none;
    }

    @apply pointer-events-none;
    --btn-border: #0000;
    --btn-noise: none;

    --btn-fg: theme(colors.base-content);
    @supports (color: color-mix(in oklab, black, black)) {
      --btn-fg: color-mix(in oklch, theme(colors.base-content) 20%, #0000) !important;
    }

    @media (hover: hover) {
      &:hover {
        @apply bg-neutral/20 pointer-events-none;
        --btn-border: #0000;
        --btn-fg: color-mix(in oklch, theme(colors.base-content) 20%, #0000);
      }
    }
  }

  &:is(input[type="checkbox"], input[type="radio"]) {
    @apply appearance-none;

    /* &:not(.btn-square, .btn-circle) {
      @apply w-auto;
    } */

    &::after {
      content: attr(aria-label);
    }
  }
  &:where(input:checked:not(.filter .btn)) {
    --btn-color: theme(colors.primary);
    --btn-fg: theme(colors.primary-content);
    isolation: isolate;
  }
}

.btn-primary {
  --btn-color: theme(colors.primary);
  --btn-fg: theme(colors.primary-content);
}

.btn-secondary {
  --btn-color: theme(colors.secondary);
  --btn-fg: theme(colors.secondary-content);
}

.btn-accent {
  --btn-color: theme(colors.accent);
  --btn-fg: theme(colors.accent-content);
}

.btn-neutral {
  --btn-color: theme(colors.neutral);
  --btn-fg: theme(colors.neutral-content);
}

.btn-info {
  --btn-color: theme(colors.info);
  --btn-fg: theme(colors.info-content);
}

.btn-success {
  --btn-color: theme(colors.success);
  --btn-fg: theme(colors.success-content);
}

.btn-warning {
  --btn-color: theme(colors.warning);
  --btn-fg: theme(colors.warning-content);
}

.btn-error {
  --btn-color: theme(colors.error);
  --btn-fg: theme(colors.error-content);
}

.btn-ghost {
  &:not(:hover, :active:focus, :focus-visible) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
    &:not(:disabled, [disabled], .btn-disabled) {
      @apply outline-current;
      --btn-fg: currentColor;
    }
  }
}

.btn-link {
  @apply underline outline-current;
  --btn-border: #0000;
  --btn-bg: #0000;
  --btn-fg: theme(colors.primary);
  --btn-noise: none;
  --btn-shadow: "";

  &:is(:hover, :active:focus, :focus-visible) {
    @apply underline;
    --btn-border: #0000;
    --btn-bg: #0000;
  }
}

.btn-outline {
  &:not(:hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
    --btn-shadow: "";
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }

  @media (hover: none) {
    &:hover:not(:active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
      --btn-shadow: "";
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }
}

.btn-dash {
  &:not(:hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
    --btn-shadow: "";
    border-style: dashed;
    --btn-bg: #0000;
    --btn-fg: var(--btn-color);
    --btn-border: var(--btn-color);
    --btn-noise: none;
  }

  @media (hover: none) {
    &:hover:not(:active, :focus-visible, :disabled, [disabled], .btn-disabled, :checked) {
      --btn-shadow: "";
      border-style: dashed;
      --btn-bg: #0000;
      --btn-fg: var(--btn-color);
      --btn-border: var(--btn-color);
      --btn-noise: none;
    }
  }
}

.btn-soft {
  &:not(:hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
    --btn-shadow: "";
    --btn-fg: var(--btn-color, theme(colors.base-content));
    --btn-bg: color-mix(
      in oklab,
      var(--btn-color, oklch(var(--color-base-content))) 8%,
      var(--color-base-100)
    );
    --btn-border: color-mix(
      in oklab,
      var(--btn-color, oklch(var(--color-base-content))) 10%,
      var(--color-base-100)
    );
    --btn-noise: none;
  }

  @media (hover: none) {
    &:hover:not(:active, :focus-visible, :disabled, [disabled], .btn-disabled) {
      --btn-shadow: "";
      --btn-fg: var(--btn-color, theme(colors.base-content));
      --btn-bg: color-mix(
        in oklab,
        var(--btn-color, oklch(var(--color-base-content))) 8%,
        var(--color-base-100)
      );
      --btn-border: color-mix(
        in oklab,
        var(--btn-color, oklch(var(--color-base-content))) 10%,
        var(--color-base-100)
      );
      --btn-noise: none;
    }
  }
}

.btn-xs {
  --fontsize: 0.6875rem;
  --btn-p: 0.5rem;
  --size: calc(var(--size-field, 0.25rem) * 6);
}

.btn-sm {
  --fontsize: 0.75rem;
  --btn-p: 0.75rem;
  --size: calc(var(--size-field, 0.25rem) * 8);
}

.btn-md {
  --fontsize: 0.875rem;
  --btn-p: 1rem;
  --size: calc(var(--size-field, 0.25rem) * 10);
}

.btn-lg {
  --fontsize: 1.125rem;
  --btn-p: 1.25rem;
  --size: calc(var(--size-field, 0.25rem) * 12);
}

.btn-xl {
  --fontsize: 1.375rem;
  --btn-p: 1.5rem;
  --size: calc(var(--size-field, 0.25rem) * 14);
}

.btn-square {
  @apply px-0;
  width: var(--size);
  height: var(--size);
}

.btn-circle {
  @apply rounded-full px-0;
  width: var(--size);
  height: var(--size);
}

.btn-wide {
  @apply w-full max-w-64;
}

.btn-block {
  @apply w-full;
}

.btn-pending {
  @apply pointer-events-none opacity-50;
}
